ll dis[100005];
ll n,l;
 
int timer;
vector<int> tin, tout;
vector<vector<int>> up;
 
vector<ll> adj[100005];
void dfs1(ll n, ll p, ll di){
	dis[n] = di;
	for(auto x: adj[n]){
		if(x == p)	continue;
		dfs1(x,n,di+1);
	}
}
void dfs(int v, int p)
{
    tin[v] = ++timer;
    up[v][0] = p;
    for (int i = 1; i <= l; ++i)
        up[v][i] = up[up[v][i-1]][i-1];
 
    for (int u : adj[v]) {
        if (u != p)
            dfs(u, v);
    }
 
    tout[v] = ++timer;
}
 
bool is_ancestor(int u, int v)
{
    return tin[u] <= tin[v] && tout[u] >= tout[v];
}
 
int lca(int u, int v)
{
    if (is_ancestor(u, v))
        return u;
    if (is_ancestor(v, u))
        return v;
    for (int i = l; i >= 0; --i) {
        if (!is_ancestor(up[u][i], v))
            u = up[u][i];
    }
    return up[u][0];
}
